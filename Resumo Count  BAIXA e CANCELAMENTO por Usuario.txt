/*** Base da Consulta RELATORIO DA LORENNA ***/

SELECT
D.NOME_FANTASIA,
C.NOME_FANTASIA,
COUNT (B.ID_LANCAMENTO) AS QTD
FROM CONTRATO A (NOLOCK)
JOIN LANCAMENTO B (NOLOCK) ON A.ID_CONTRATO = B.ID_CONTRATO
JOIN FRANQUIA C (NOLOCK) ON A.ID_FRANQUIA = C.ID_FRANQUIA
JOIN FRANQUIA D (NOLOCK) ON C.ID_SUB_FRANQUIA = D.ID_FRANQUIA
JOIN FORMA_PGTO E (NOLOCK) ON B.ID_FORMA_RECEBIMENTO = E.ID_FORMA_PGTO
JOIN FILIADO F (NOLOCK) ON A.ID_FILIADO = F.ID_FILIADO
WHERE B.STATUS_LAN = 1
AND B.FLAG_BAIXA = 1
AND B.DT_BAIXA BETWEEN '2022-03-01 00:00:00' AND '2022-03-31 23:59:59'
AND E.ID_FORMA_PGTO_PAI = 3200
AND A.ID_SERVICO IN (1,9,18)
GROUP BY D.NOME_FANTASIA, C.NOME_FANTASIA
ORDER BY 1,2



/*********************************************************************************************************************************************************************************************************/
/****** Script de EXECUÇÃO DIARIA da Tabela TMP... ******/

/****** Script de Criação da Tabela TMPREGIONAIS ******/
/***drop table TMPREGIONAIS ***/
 GO

USE [CTN_PRODUCAO]
GO

SELECT * into TMPREGIONAIS
  FROM [CTN_PRODUCAO].[dbo].[FRANQUIA]
  Where ID_SUB_FRANQUIA is null 
GO


/****** Script de EXECUÇÃO DIARIA para atualização da Tabela TMPHISTORICOCANCELAMENTOLANCAMENTO ******/
/****** Baseado na tabela HISTORICO_CANCELAMENTO_LANCAMENTO ******/

USE [CTN_PRODUCAO]
GO

SELECT
D.ID_FRANQUIA as ID_SUB_FRANQUIA,
C.ID_FRANQUIA,  
U.ID_USUARIO,  
CONVERT( DATE, CONVERT( VARCHAR, B.DT_CANCELAMENTO, 120)) as DT_CANCELAMENTO,
COUNT (B.ID_LANCAMENTO) AS QTD_HIST
into TMPHISTORICOCANCELAMENTOLANCAMENTO
FROM CONTRATO A (NOLOCK)
JOIN HISTORICO_CANCELAMENTO_BAIXA_LANCAMENTO B (NOLOCK) ON A.ID_CONTRATO = B.ID_CONTRATO
JOIN FRANQUIA C (NOLOCK) ON A.ID_FRANQUIA = C.ID_FRANQUIA
JOIN FRANQUIA D (NOLOCK) ON C.ID_SUB_FRANQUIA = D.ID_FRANQUIA
join S_USUARIO U (nolock) ON B.ID_USUARIO_CANCELAMENTO = U.ID_USUARIO
JOIN FORMA_PGTO E (NOLOCK) ON B.ID_FORMA_RECEBIMENTO = E.ID_FORMA_PGTO
JOIN FILIADO F (NOLOCK) ON A.ID_FILIADO = F.ID_FILIADO
WHERE /*** B.STATUS_LAN = 1
AND B.FLAG_BAIXA = 1
and ***/ CONVERT( DATE, B.DT_CANCELAMENTO) >  CONVERT( DATE, DATEADD ( DAY ,-121, GETDATE ( ) ) )
AND E.ID_FORMA_PGTO_PAI = 3200
AND A.ID_SERVICO IN (1,9,18)
GROUP BY D.ID_FRANQUIA, C.ID_FRANQUIA, U.ID_USUARIO, CONVERT( DATE, CONVERT( VARCHAR, B.DT_CANCELAMENTO, 120)) 
ORDER BY 1,2,3,4


/****** Script de EXECUÇÃO DIARIA para atualização da Tabela TMPATUALCANCELAMENTOLANCAMENTO ******/
/****** Baseado na tabela LANCAMENTO ******/

USE [CTN_PRODUCAO]
GO

SELECT
D.ID_FRANQUIA as ID_SUB_FRANQUIA,
C.ID_FRANQUIA,  
U.ID_USUARIO,  
CONVERT( DATE, CONVERT( VARCHAR, B.DT_CANCELAMENTO, 120)) as DT_CANCELAMENTO,
COUNT (B.ID_LANCAMENTO) AS QTD_ATUAL
into TMPATUALCANCELAMENTOLANCAMENTO
FROM CONTRATO A (NOLOCK)
JOIN LANCAMENTO B (NOLOCK) ON A.ID_CONTRATO = B.ID_CONTRATO
JOIN FRANQUIA C (NOLOCK) ON A.ID_FRANQUIA = C.ID_FRANQUIA
JOIN FRANQUIA D (NOLOCK) ON C.ID_SUB_FRANQUIA = D.ID_FRANQUIA
join S_USUARIO U (nolock) ON B.ID_USUARIO_CANCELAMENTO = U.ID_USUARIO
JOIN FORMA_PGTO E (NOLOCK) ON B.ID_FORMA_RECEBIMENTO = E.ID_FORMA_PGTO
JOIN FILIADO F (NOLOCK) ON A.ID_FILIADO = F.ID_FILIADO
WHERE /*** B.STATUS_LAN = 1
AND B.FLAG_BAIXA = 1
and ***/  CONVERT( DATE, B.DT_CANCELAMENTO) >  CONVERT( DATE, DATEADD ( DAY ,-121, GETDATE ( ) ) )
AND E.ID_FORMA_PGTO_PAI = 3200
AND A.ID_SERVICO IN (1,9,18)
GROUP BY D.ID_FRANQUIA, C.ID_FRANQUIA, U.ID_USUARIO, CONVERT( DATE, CONVERT( VARCHAR, B.DT_CANCELAMENTO, 120)) 
ORDER BY 1,2,3,4


/*** Atualiza o QTD_ATUAL na tabela TMPHISTORICOCANCELAMENTOLANCAMENTO ***/
ALTER TABLE TMPHISTORICOCANCELAMENTOLANCAMENTO
    ADD 
	QTD_ATUAL int,
	FLAG int;
GO

/*** Deve vir de outra tabela mantida historicamente ***/
UPDATE TMPHISTORICOCANCELAMENTOLANCAMENTO
SET  TMPHISTORICOCANCELAMENTOLANCAMENTO.QTD_ATUAL=(SELECT TMPATUALCANCELAMENTOLANCAMENTO.QTD_ATUAL
                            FROM  TMPATUALCANCELAMENTOLANCAMENTO (nolock)
                            WHERE TMPATUALCANCELAMENTOLANCAMENTO.DT_CANCELAMENTO=TMPHISTORICOCANCELAMENTOLANCAMENTO.DT_CANCELAMENTO
					and TMPATUALCANCELAMENTOLANCAMENTO.ID_USUARIO=TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_USUARIO
					and TMPATUALCANCELAMENTOLANCAMENTO.ID_FRANQUIA=TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_FRANQUIA)

GO
/****** Limpeza (QTDs NULAS) da base dos dados ******/
UPDATE TMPHISTCANCELAMENTOLANCAMENTO
SET  TMPHISTCANCELAMENTOLANCAMENTO.QTD_ATUAL=0
                            WHERE TMPHISTCANCELAMENTOLANCAMENTO.QTD_ATUAL is null

GO
/*** Ativa o FLAG dos registro com diferença entre QTD_HIST e QTD_ATUAL ***/
UPDATE TMPHISTORICOCANCELAMENTOLANCAMENTO
SET  TMPHISTORICOCANCELAMENTOLANCAMENTO.FLAG=(SELECT (TMPATUALORICOCANCELAMENTOLANCAMENTO.QTD_ATUAL-TMPHISTCANCELAMENTOLANCAMENTO.QTD_HIST) AS Result 
                            FROM  TMPATUALCANCELAMENTOLANCAMENTO (nolock)
                            WHERE TMPATUALCANCELAMENTOLANCAMENTO.DT_CANCELAMENTO=TMPHISTORICOCANCELAMENTOLANCAMENTO.DT_CANCELAMENTO
					and TMPATUALCANCELAMENTOLANCAMENTO.ID_USUARIO=TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_USUARIO
					and TMPATUALCANCELAMENTOLANCAMENTO.ID_FRANQUIA=TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_FRANQUIA)

GO



/*********************************************************************************************************************************************************************************************************/


/****** Script de EXECUÇÃO DIARIA para atualização da Tabela TMPHISTORICOBAIXALANCAMENTO ******/
/****** Baseado na tabela HISTORICO_BAIXA_LANCAMENTO ******/

USE [CTN_PRODUCAO]
GO

SELECT
D.ID_FRANQUIA as ID_SUB_FRANQUIA,
C.ID_FRANQUIA,  
U.ID_USUARIO,  
CONVERT( DATE, CONVERT( VARCHAR, B.DT_BAIXA, 120)) as DT_BAIXA,
COUNT (B.ID_LANCAMENTO) AS QTD_HIST
into TMPHISTORICOBAIXALANCAMENTO
FROM CONTRATO A (NOLOCK)
JOIN HISTORICO_BAIXA_LANCAMENTO B (NOLOCK) ON A.ID_CONTRATO = B.ID_CONTRATO
JOIN FRANQUIA C (NOLOCK) ON A.ID_FRANQUIA = C.ID_FRANQUIA
JOIN FRANQUIA D (NOLOCK) ON C.ID_SUB_FRANQUIA = D.ID_FRANQUIA
join S_USUARIO U (nolock) ON B.ID_USUARIO_BAIXA = U.ID_USUARIO
JOIN FORMA_PGTO E (NOLOCK) ON B.ID_FORMA_RECEBIMENTO = E.ID_FORMA_PGTO
JOIN FILIADO F (NOLOCK) ON A.ID_FILIADO = F.ID_FILIADO
WHERE B.STATUS_LAN = 1
AND B.FLAG_BAIXA = 1
and  CONVERT( DATE, B.DT_BAIXA) >  CONVERT( DATE, DATEADD ( DAY ,-121, GETDATE ( ) ) )
AND E.ID_FORMA_PGTO_PAI = 3200
AND A.ID_SERVICO IN (1,9,18)
GROUP BY D.ID_FRANQUIA, C.ID_FRANQUIA, U.ID_USUARIO, CONVERT( DATE, CONVERT( VARCHAR, B.DT_BAIXA, 120)) 
ORDER BY 1,2,3,4


/****** Script de EXECUÇÃO DIARIA para atualização da Tabela TMPATUALBAIXALANCAMENTO ******/
/****** Baseado na tabela LANCAMENTO ******/

USE [CTN_PRODUCAO]
GO

SELECT
D.ID_FRANQUIA as ID_SUB_FRANQUIA,
C.ID_FRANQUIA,  
U.ID_USUARIO,  
CONVERT( DATE, CONVERT( VARCHAR, B.DT_BAIXA, 120)) as DT_BAIXA,
COUNT (B.ID_LANCAMENTO) AS QTD_ATUAL
into TMPATUALBAIXALANCAMENTO
FROM CONTRATO A (NOLOCK)
JOIN LANCAMENTO B (NOLOCK) ON A.ID_CONTRATO = B.ID_CONTRATO
JOIN FRANQUIA C (NOLOCK) ON A.ID_FRANQUIA = C.ID_FRANQUIA
JOIN FRANQUIA D (NOLOCK) ON C.ID_SUB_FRANQUIA = D.ID_FRANQUIA
join S_USUARIO U (nolock) ON B.ID_USUARIO_BAIXA = U.ID_USUARIO
JOIN FORMA_PGTO E (NOLOCK) ON B.ID_FORMA_RECEBIMENTO = E.ID_FORMA_PGTO
JOIN FILIADO F (NOLOCK) ON A.ID_FILIADO = F.ID_FILIADO
WHERE B.STATUS_LAN = 1
AND B.FLAG_BAIXA = 1
and  CONVERT( DATE, B.DT_BAIXA) >  CONVERT( DATE, DATEADD ( DAY ,-121, GETDATE ( ) ) )
AND E.ID_FORMA_PGTO_PAI = 3200
AND A.ID_SERVICO IN (1,9,18)
GROUP BY D.ID_FRANQUIA, C.ID_FRANQUIA, U.ID_USUARIO, CONVERT( DATE, CONVERT( VARCHAR, B.DT_BAIXA, 120)) 
ORDER BY 1,2,3,4

/*** Atualiza o QTD_ATUAL na tabela TMPHISTORICOBAIXALANCAMENTO ***/
ALTER TABLE TMPHISTORICOBAIXALANCAMENTO
    ADD 
	QTD_ATUAL int,
	FLAG int;
GO

/*** Deve vir de outra tabela mantida historicamente ***/
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL=(SELECT TMPATUALBAIXALANCAMENTO.QTD_ATUAL
                            FROM  TMPATUALBAIXALANCAMENTO (nolock)
                            WHERE TMPATUALBAIXALANCAMENTO.DT_BAIXA=TMPHISTORICOBAIXALANCAMENTO.DT_BAIXA
					and TMPATUALBAIXALANCAMENTO.ID_USUARIO=TMPHISTORICOBAIXALANCAMENTO.ID_USUARIO
					and TMPATUALBAIXALANCAMENTO.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)

GO
/****** Limpeza (QTDs NULAS) da base dos dados ******/
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL=0
                            WHERE  TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL is null

/*** Ativa o FLAG dos registro com diferença entre QTD_HIST e QTD_ATUAL ***/
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.FLAG=(SELECT (TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL-TMPATUALBAIXALANCAMENTO.QTD_HIST) AS Result 
                            FROM  TMPATUALBAIXALANCAMENTO (nolock)
                            WHERE TMPATUALBAIXALANCAMENTO.DT_BAIXA=TMPHISTORICOBAIXALANCAMENTO.DT_BAIXA
					and TMPATUALBAIXALANCAMENTO.ID_USUARIO=TMPHISTORICOBAIXALANCAMENTO.ID_USUARIO
					and TMPATUALBAIXALANCAMENTO.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)

GO


/*********************************************************************************************************************************************************************************************************/

/*** Atualiza o QTD_ATUAL, QTD_HIST e FLAG de CANCELAMENTO na tabela TMPHISTORICOBAIXALANCAMENTO ***/
ALTER TABLE TMPHISTORICOBAIXALANCAMENTO
    ADD 
	QTD_ATUAL_CANC int,
	QTD_HIST_CANC int,
	FLAG_CANC int;
GO

/*** Deve vir de outra tabela mantida historicamente ***/
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL_CANC=(SELECT TMPHISTORICOCANCELAMENTOLANCAMENTO.QTD_ATUAL
                            FROM  TMPHISTORICOCANCELAMENTOLANCAMENTO (nolock)
                            WHERE TMPHISTORICOCANCELAMENTOLANCAMENTO.DT_CANCELAMENTO=TMPHISTORICOBAIXALANCAMENTO.DT_BAIXA
					and TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_USUARIO=TMPHISTORICOBAIXALANCAMENTO.ID_USUARIO
					and TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)

GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.QTD_HIST_CANC=(SELECT TMPHISTORICOCANCELAMENTOLANCAMENTO.QTD_HIST
                            FROM  TMPHISTORICOCANCELAMENTOLANCAMENTO (nolock)
                            WHERE TMPHISTORICOCANCELAMENTOLANCAMENTO.DT_CANCELAMENTO=TMPHISTORICOBAIXALANCAMENTO.DT_BAIXA
					and TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_USUARIO=TMPHISTORICOBAIXALANCAMENTO.ID_USUARIO
					and TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)

GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.FLAG_CANC=(SELECT TMPHISTORICOCANCELAMENTOLANCAMENTO.FLAG
                            FROM  TMPHISTORICOCANCELAMENTOLANCAMENTO (nolock)
                            WHERE TMPHISTORICOCANCELAMENTOLANCAMENTO.DT_CANCELAMENTO=TMPHISTORICOBAIXALANCAMENTO.DT_BAIXA
					and TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_USUARIO=TMPHISTORICOBAIXALANCAMENTO.ID_USUARIO
					and TMPHISTORICOCANCELAMENTOLANCAMENTO.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)

GO

/*** Inclui os registros de cancelamento sem baixa na tabela TMPHISTORICOBAIXALANCAMENTO ***/
/*** CAMPOS DE TMPHISTORICOCANCELAMENTOLANCAMENTO COLOCANDO DT_CANCELAMENTP em DT_BAIXA, QTD E QTD ATUAL EM QTD_CANC E QTD_ATUAL_CANC ***/

/*** SET IDENTITY_INSERT TMPHISTORICOBAIXALANCAMENTO ON ***/
GO
INSERT INTO TMPHISTORICOBAIXALANCAMENTO with (TABLOCK) ( ID_SUB_FRANQUIA, ID_FRANQUIA, ID_USUARIO, DT_BAIXA, QTD_HIST_CANC, QTD_ATUAL_CANC, FLAG_CANC ) 
SELECT ID_SUB_FRANQUIA, ID_FRANQUIA, ID_USUARIO, DT_CANCELAMENTO, QTD_HIST, QTD_ATUAL, FLAG from TMPHISTORICOCANCELAMENTOLANCAMENTO C (nolock) where NOT EXISTS(select top 1 B.DT_BAIXA from TMPHISTORICOBAIXALANCAMENTO B (nolock) 
					where B.DT_BAIXA=C.DT_CANCELAMENTO
					and B.ID_USUARIO=C.ID_USUARIO
					and B.ID_FRANQUIA=C.ID_FRANQUIA)
GO
/*** SET IDENTITY_INSERT TMPHISTORICOBAIXALANCAMENTO OFF ***/
GO

/****** Zera contadores nulos da base dos dados ******/
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.QTD_HIST=0
							WHERE TMPHISTORICOBAIXALANCAMENTO.QTD_HIST is null
GO
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL=0
							WHERE TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL is null
GO
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.FLAG=0
							WHERE TMPHISTORICOBAIXALANCAMENTO.FLAG is null
GO
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL_CANC=0
							WHERE TMPHISTORICOBAIXALANCAMENTO.QTD_ATUAL_CANC is null
GO
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.QTD_HIST_CANC=0
							WHERE TMPHISTORICOBAIXALANCAMENTO.QTD_HIST_CANC is null
GO
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.FLAG_CANC=0
							WHERE TMPHISTORICOBAIXALANCAMENTO.FLAG_CANC is null
GO

/*********************************************************************************************************************************************************************************************************/

/****** Script de Alteração da Tabela TMPHISTORICOBAIXALANCAMENTO ******/
/****** Objetivo: Complementar as informaççoes no Repositorio de totalização das Baixas realizadas por Usuario e Data da Baixa ******/

ALTER TABLE TMPHISTORICOBAIXALANCAMENTO
    ADD 
	ID_FUNCIONARIO int,
	ID_PESSOA int,
	NOME_PESSOA nvarchar(150),
	NOME_FANTASIA nvarchar(50),
	CEP varchar(8),
	UF char(2),
	NOME_REGIONAL nvarchar(50);
GO


UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.ID_FUNCIONARIO=(SELECT S_USUARIO.ID_FUNCIONARIO
                            FROM S_USUARIO (nolock)
                            WHERE S_USUARIO.ID_USUARIO=TMPHISTORICOBAIXALANCAMENTO.ID_USUARIO)
GO

UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.ID_PESSOA=(SELECT FUNCIONARIO.ID_PESSOA
                            FROM FUNCIONARIO (nolock)
                            WHERE FUNCIONARIO.ID_FUNCIONARIO=TMPHISTORICOBAIXALANCAMENTO.ID_FUNCIONARIO)
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.NOME_PESSOA=(SELECT PESSOA.NOME
                            FROM PESSOA (nolock)
                            WHERE PESSOA.ID_PESSOA=TMPHISTORICOBAIXALANCAMENTO.ID_PESSOA)
GO

/*** UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA=(SELECT TOP (1) FUNCIONARIO_FRANQUIA.ID_FRANQUIA
                            FROM FUNCIONARIO_FRANQUIA (nolock), FRANQUIA (nolock)
                            WHERE FUNCIONARIO_FRANQUIA.ID_FRANQUIA=FRANQUIA.ID_FRANQUIA and FRANQUIA.ID_SUB_FRANQUIA is not null and FRANQUIA.ID_TIPO_FRANQUIA = 3
							and FUNCIONARIO_FRANQUIA.ID_FUNCIONARIO=TMPHISTORICOBAIXALANCAMENTO.ID_FUNCIONARIO order by FUNCIONARIO_FRANQUIA.DT_alteracao DESC)
GO ***/

UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.NOME_FANTASIA=(SELECT FRANQUIA.NOME_FANTASIA
                            FROM FRANQUIA (nolock)
                            WHERE FRANQUIA.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.CEP=(SELECT FRANQUIA.CEP
                            FROM FRANQUIA (nolock)
                            WHERE FRANQUIA.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)
GO
UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.UF=(SELECT FRANQUIA.UF
                            FROM FRANQUIA (nolock)
                            WHERE FRANQUIA.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)
GO

/*** UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.ID_SUB_FRANQUIA=(SELECT FRANQUIA.ID_SUB_FRANQUIA
                            FROM FRANQUIA (nolock)
                            WHERE FRANQUIA.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_FRANQUIA)
GO ***/

UPDATE TMPHISTORICOBAIXALANCAMENTO
SET  TMPHISTORICOBAIXALANCAMENTO.NOME_REGIONAL=(SELECT FRANQUIA.NOME_FANTASIA
                            FROM FRANQUIA (nolock)
                            WHERE FRANQUIA.ID_FRANQUIA=TMPHISTORICOBAIXALANCAMENTO.ID_SUB_FRANQUIA)
GO

/****** Limpeza (BAIXAS FUTURAS) da base dos dados ******/
delete 
  FROM TMPHISTORICOBAIXALANCAMENTO
  WHERE CONVERT( DATE, DT_BAIXA) >  CONVERT( DATE, DATEADD ( DAY ,365, GETDATE ( ) ) )
GO

/*********************************************************************************************************************************************************************************************************/




